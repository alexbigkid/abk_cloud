[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "abk-hello-tavern-tests"
version = "1.0.0"
description = "Tavern-based integration tests for abk-hello service"
authors = [{name = "ABK Team"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pytest>=7.0.0",
    "requests>=2.28.0",
    "tavern>=2.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-html>=3.1.0",
    "pytest-json-report>=1.5.0",
    "pyyaml>=6.0.0",
    "jsonschema>=4.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[project.optional-dependencies]
dev = [
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "yamllint>=1.30.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config", 
    "--tb=short",
]
testpaths = [
    ".",
]
# Configure pytest to recognize YAML files as tests for Tavern
python_files = ["test_*.py", "test_*.yaml", "test_*.yml"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "tavern: marks tests as Tavern-based API tests",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "slow: marks tests as slow running",
]

[tool.tavern]
# Tavern-specific configuration
strict = true
# Add any tavern-specific settings here

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/conftest.py",
    "*.yaml",
    "*.yml",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]
"conftest.py" = ["B011"]

[tool.yamllint]
extends = "default"

[tool.yamllint.rules.line-length]
max = 120

[tool.yamllint.rules.comments]
min-spaces-from-content = 1

[tool.yamllint.rules.document-start]
present = false

[tool.yamllint.rules.truthy]
allowed-values = ['true', 'false']
check-keys = false